simulation:
  stepLength: 0.01
  repetitions: 20
  simTimeLimit: 30
  playgroundSizeX: 1000
  playgroundSizeY: 2000
  playgroundSizeZ: 2000

#choose a single kinetic model for simulation, 1 -> True; 0->False
kinetic_model:
    linearMobility: 1
    splineMobility: 0

#obstacle detection-> collision_action->  1= warning message, 2 = no action,  3=remove uav
obstacle_detection:
  polygon_file: 'examples/simpleSimulation/intersection.add.xml'
  collision_action: 1

#Input parameters for Linear Mobility
#Use Hyphen for multiple UAVs
uav:

  - startPosX: 0          # waypoints to test building detection
    startPosY: 0
    startPosZ: 3
    endPosX: 12
    endPosY: 12
    endPosZ: 3
    speed: 0.8

  #- startPosX: 700
  #  startPosY: 700
  #  startPosZ: 3
  #  endPosX: 0
  #  endPosY: 5
  #  endPosZ: 7
  #  speed: 50


  #- startPosX: 1000
  #  startPosY: 1000
  #  startPosZ: 3
  #  endPosX: 0
  #  endPosY: 5
  #  endPosZ: 7


#Input parameters for Spline Mobility
uavsp:

  #- waypointX: [700,0]       # straight line: same as linear mobility
  #  waypointY: [700,5]
  #  waypointZ: [3,7]
  #  speed: 50


  - waypointX: [0,6,12]           # straight line
    waypointY: [0,6,12]
    waypointZ: [3,3,3]
    speed: 0.8


  #- waypointX: [1,6,12]           #straight line
  #  waypointY: [1,1,1]
  #  waypointZ: [2,2,2]
  #  speed: 3



  #- waypointX: [1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1]       # spiral shape
  #  waypointY: [2, 3, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2]
  #  waypointZ: [3 , 2.79166667, 2.58333333, 2.375     , 2.16666667, 1.95833333, 1.75      , 1.54166667, 1.33333333, 1.125     , 0.91666667, 0.70833333, 0.5 ]
  #  speed: 3